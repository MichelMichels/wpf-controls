<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MichelMichels.Wpf.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MichelMichels.Wpf.Controls;component/Resources/Brushes.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MichelMichels.Wpf.Controls;component/Resources/Paths.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MichelMichels.Wpf.Controls;component/Themes/TitlebarButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MichelMichels.Wpf.Controls;component/Themes/TextTitlebarButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style
        x:Key="MaximizeButton.Windows10"
        BasedOn="{StaticResource TextTitlebarButton.Default}"
        TargetType="local:MaximizeButton">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="Text" Value="&#xE922;" />
    </Style>
    <Style
        x:Key="MaximizeButton.Windows11"
        BasedOn="{StaticResource TextTitlebarButton.Default}"
        TargetType="local:MaximizeButton">
        <Setter Property="FontFamily" Value="Segoe Fluent Icons" />
        <Setter Property="Text" Value="&#xE922;" />
    </Style>

    <Style x:Key="MaximizeButton.macOS" TargetType="local:MaximizeButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MaximizeButton">
                    <Border
                        x:Name="border"
                        Width="16"
                        Height="16"
                        VerticalAlignment="Stretch"
                        Background="#33c748"
                        CornerRadius="16"
                        RenderOptions.EdgeMode="Aliased"
                        SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#27aa35" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>